<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.thinkgem.fast.modules.purchase.dao.PurchaseBackTicketDao">
    
	<sql id="purchaseBackTicketColumns">
		a.id AS "id",
		a.office_id AS "office.id",
		a.purchase_id AS "purchaseId",
		a.goods_id AS "goodsId",
		a.unit_back_number AS "unitBackNumber",
		a.back_price_tax_free AS "backPriceTaxFree",
		a.back_price_total_tax AS "backPriceTotalTax",
		a.back_price_tax_amount AS "backPriceTaxAmount",
		a.return_reason AS "returnReason",
		a.create_by AS "createBy.id",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.id",
		a.update_date AS "updateDate",
		a.remarks AS "remarks",
		a.del_flag AS "delFlag",
		o2.name AS "office.name"
	</sql>
	
	<sql id="purchaseBackTicketJoins">
		LEFT JOIN sys_office o2 ON o2.id = a.office_id
	</sql>
    
	<select id="get" resultType="PurchaseBackTicket">
		SELECT 
			<include refid="purchaseBackTicketColumns"/>
		FROM purchase_back_ticket a
		<include refid="purchaseBackTicketJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<select id="findList" resultType="PurchaseBackTicket">
		SELECT 
			<include refid="purchaseBackTicketColumns"/>
		FROM purchase_back_ticket a
		<include refid="purchaseBackTicketJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
			<if test="office != null and office.id != null and office.id != ''">
				AND a.office_id = #{office.id}
			</if>
			<if test="purchaseId != null and purchaseId != ''">
				AND a.purchase_id = #{purchaseId}
			</if>
			<if test="goodsId != null and goodsId != ''">
				AND a.goods_id = #{goodsId}
			</if>
			<if test="returnReason != null and returnReason != ''">
				AND a.return_reason = #{returnReason}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<select id="findAllList" resultType="PurchaseBackTicket">
		SELECT 
			<include refid="purchaseBackTicketColumns"/>
		FROM purchase_back_ticket a
		<include refid="purchaseBackTicketJoins"/>
		<where>
			a.del_flag = #{DEL_FLAG_NORMAL}
		</where>		
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<insert id="insert">
		INSERT INTO purchase_back_ticket(
			id,
			office_id,
			purchase_id,
			goods_id,
			unit_back_number,
			back_price_tax_free,
			back_price_total_tax,
			back_price_tax_amount,
			return_reason,
			create_by,
			create_date,
			update_by,
			update_date,
			remarks,
			del_flag
		) VALUES (
			#{id},
			#{office.id},
			#{purchaseId},
			#{goodsId},
			#{unitBackNumber},
			#{backPriceTaxFree},
			#{backPriceTotalTax},
			#{backPriceTaxAmount},
			#{returnReason},
			#{createBy.id},
			#{createDate},
			#{updateBy.id},
			#{updateDate},
			#{remarks},
			#{delFlag}
		)
	</insert>
	
	<update id="update">
		UPDATE purchase_back_ticket SET 	
			office_id = #{office.id},
			purchase_id = #{purchaseId},
			goods_id = #{goodsId},
			unit_back_number = #{unitBackNumber},
			back_price_tax_free = #{backPriceTaxFree},
			back_price_total_tax = #{backPriceTotalTax},
			back_price_tax_amount = #{backPriceTaxAmount},
			return_reason = #{returnReason},
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			remarks = #{remarks}
		WHERE id = #{id}
	</update>
	
	<update id="delete">
		UPDATE purchase_back_ticket SET 
			del_flag = #{DEL_FLAG_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>